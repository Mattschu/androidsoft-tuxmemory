apply plugin: 'com.android.application'

dependencies {
    compile fileTree( dir: 'libs', include:'*.jar' )
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
    }
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"
    
    lintOptions {
        enable 'UnusedIds', 'EasterEgg' //, 'NewerVersionAvailable'
    }

    final Console console = System.console();

    if (console != null) {

        signingConfigs {
            release {
                project.ext.keyStorePath = System.getenv("ANDROID_KEYSTORE")
                if( project.keyStorePath != null )
                {
                    storeFile file( keyStorePath )
                    keyAlias System.getenv("ANDROID_KEY_ALIAS")
                }
                storePassword "password"
                keyPassword "password"
            }
        }
    
        task askForPasswords << {
            // Must create String because System.readPassword() returns char[]
            // (and assigning that below fails silently)
            def storePw = new String(System.console().readPassword("Keystore password: "))
            def keyPw  = new String(System.console().readPassword("Key password: "))

            android.signingConfigs.release.storePassword = storePw
            android.signingConfigs.release.keyPassword = keyPw
        }

        tasks.whenTaskAdded { theTask -> 
            if (theTask.name.equals("packageRelease")) {
                theTask.dependsOn "askForPasswords"
            }
        }
    
        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    } else {

        // Building from IDE's "Run" button
        signingConfigs {
            release {

            }
        }

    }
}



